{"version":3,"file":"static/webpack/static/development/pages/post.js.657a3d427ea17e8d52f1.hot-update.js","sources":["webpack:///./posts/2019-09-07-how-to-make-nuget-package.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \nexport const title = \"How to make a NuGet package for class library\"\nexport const createdAt = \"2019-09-07T00:00:00.000Z\"\nexport const filename = \"2019-09-07-how-to-make-nuget-package\"\nexport const category = [\"backend\",\"dotnetcore\",\".net\",\"core\"]\nexport const tag = [\"microsoft\",\"dotnetcore\"]\nexport const thumb = \"2019-09-07_thumb.jpg\"\nexport const slug = \"Make a NuGet package with dotnet CLI\"\n\nconst layoutProps = {\n  title,\ncreatedAt,\nfilename,\ncategory,\ntag,\nthumb,\nslug\n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components}>{`How to make a NuGet package for class library`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`by moondaddi on 07 Sep 2019`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Purpose`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is to show how to pack the external class library into NuGet package and publish it on NuGet.org.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Background`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`My team decided to build a new indentity api for auth and control roles of each client apis. We chose the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`IdentityServer4`}</MDXTag>{` on ASP.NET Core. But we had to migrate all users information including password which is stored in DB. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`IdentityServer4`}</MDXTag>{` has a default password hasher `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PBKDF2`}</MDXTag>{`. Hence, we decided to override this password hasher with custom hasher which is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SHA256`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`BASE64`}</MDXTag>{` encoding. We built the custom password hasher as the external class library and published it to NuGet for later use and maintanence.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Requirements`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`macOS`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`dotnet CLI`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Install the dotnet CLI`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://dotnet.microsoft.com/download\"}}>{`https://dotnet.microsoft.com/download`}</MDXTag></MDXTag>\n<MDXTag name=\"ol\" components={components} props={{\"start\":2}}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the class library`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`example$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` dotnet new classlib -n SHA256.Password.Hasher`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`This makes a directory `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SHA256.Password.Hasher`}</MDXTag>{` and create a template for class library`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ol\" components={components} props={{\"start\":3}}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Build the class library`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-csharp\"}}></MDXTag></MDXTag>\n\n\n\n\n\n\n\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAHA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA9CA;AACA;AADA;AAgDA;;;;A","sourceRoot":""}