{"version":3,"file":"static/webpack/static/development/pages/post.js.c807160c7aa91eb0a77f.hot-update.js","sources":["webpack:///./posts/2018-12-24-Deploy-Prisma-Server-to-AWS-with-Docker.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \nexport const title = \"Deploy the Prisma Server to AWS ECS and EC2 with Docker\"\nexport const createdAt = \"2018-12-24T00:00:00.000Z\"\nexport const filename = \"2018-12-24-Deploy-Prisma-Server-to-AWS-with-Docker\"\nexport const category = [\"backend\"]\nexport const tag = [\"aws\",\"graphql\",\"prisma\",\"ecs\"]\nexport const thumb = \"2018-12-24_thumb.png\"\nexport const slug = \"Fix the bug!\"\n\nconst layoutProps = {\n  title,\ncreatedAt,\nfilename,\ncategory,\ntag,\nthumb,\nslug\n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components}>{`Deploy the Prisma Server to the AWS EC2 with Docker`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`by moondaddi on 2018-12-24`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Prisma?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Simply, the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.prisma.io/\"}}>{`Prisma`}</MDXTag>{` is the new ORM(`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://en.wikipedia.org/wiki/Object-relational_mapping\"}}>{`Object Relational Mapping`}</MDXTag>{`) based on GraphQL query language. The Prisma can make your whole workflow to set up the graphQL API a lot easier. All you need is only graphQL schema in order to set up the graphQL API.`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`ex. GraphQL schema`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-js\"}}>{`type Tweet {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`id`}</MDXTag>{`: ID! @unique\n  createdAt: DateTime!\n  text: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`String`}</MDXTag>{`!\n  owner: User!\n  location: Location!\n}\n\ntype User {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`id`}</MDXTag>{`: ID! @unique\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  handle: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`String`}</MDXTag>{`! @unique\n  name: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`String`}</MDXTag>{`\n  tweets: [Tweet!]!\n}\n\ntype Location {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`latitude`}</MDXTag>{`: Float!\n  longitude: Float!\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you make your graphQL schema to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`datamodel.prisma`}</MDXTag>{` file. It's all set. Prisma will deploy your schema to the connected DB(Prisma Cloud or your Remote DB/Local DB) and generate all kind of graphQL schema (types and resolvers) for you automatically. Fantastic, isn't it?`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Structure`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"/static/images/post_img/2018-12-24_prisma_structure.jpg\",\"alt\":\"Prisma structure\"}}></MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`GraphQL API Server = GraphQL API + Prisma Server`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Prisma API Server consists of two parts, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`GraphQL API`}</MDXTag>{` + `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Prisma Server`}</MDXTag>{`. GraphQL API is the backend layer which contains your business logic, such as querying users, sign up, log in, locations, and so on. You can set it up with Express or GraphQL Yoga, etc. Otherwise, Prisma Server means the backend server which contains all the graphQL schema as per your data model and is connected to database. Prisma suggests the Docker in order to set up Prisma Server.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This post will explain how to deploy this Prisma Server to AWS ECS and ECR service.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Deploy the Prisma Server`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Requirements`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Docker`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components} parentName=\"li\">\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`(for mac) `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://hub.docker.com/editions/community/docker-ce-desktop-mac\"}}>{`https://hub.docker.com/editions/community/docker-ce-desktop-mac`}</MDXTag></MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Prisma Cli`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` npm i -g prisma`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`#`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` or`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` yarn global add prisma`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`(Option 1) Using Docker machine`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is using docker-machine in cli. The docker-machine will create a docker machine on AWS EC2 directly. and docker-compose will compose the prisma server along with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker-compse.yml`}</MDXTag>{` in docker-machine.`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Create the docker machine on AWS EC2`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` docker-machine create --driver amazonec2 --amazonec2-region ap-northeast-2 --amazonec2-vpc-id __SPECIFIC_VPC__ prisma-server-example`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If creating EC2 instance is failed, check your AWS credentials and IAM policy.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Activate new machine as active host`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` docker-machine prisma-server-example`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-built_in\"}}>{`eval`}</MDXTag>{` $(docker-machine env prisma-server-example)`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`\n#`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` check docker-machine`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` docker-machine ls`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`docker-compose.yml`}</MDXTag>{` file`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-yml\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`version:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"3\"`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`services:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`  prisma:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    image:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`prismagraphql/prisma:1.23`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    restart:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`always`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    ports:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-bullet\"}}>{`      -`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"4466:4466\"`}</MDXTag>{`\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`# logging available in AWS CloudWatch`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    logging:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`      driver:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`awslogs`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`      options:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`        awslogs-group:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__AWSLOG_GROUP__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`        awslogs-region:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`ap-northeast-2`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`        awslogs-stream-prefix:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__AWSLOG_STREAM_PREFIX__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    environment:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`      PRISMA_CONFIG:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`|\n`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`        port:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`4466`}</MDXTag>{`\n        `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`# managementApiSecret: __SECRET_KEY__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`        databases:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`          default:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            connector:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`postgres`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`# PostgreSQL`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            host:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__AWS_RDS_HOST__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            database:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__DB_NAME__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            schema:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__DB_SCHEMA__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            user:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__DB_USERNAME__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            password:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`__DB_PASSWORD__`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            rawAccess:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`true`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            port:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`5432`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`            migrations:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`false`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Compose Prisma Server in new docker machine`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}>{`docker compose up -d`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Assign security group and check inbound rules`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Basically, EC2 is assigned new security group as defalut. You need to check its inbound rule and open 4466 port.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Set the elastic load balancer (optional)`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Modify prisma.yml`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-yml\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`endpoint:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`http://__AWS_EC2_ADDRESS__:4466`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`datamodel:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`datamodel.prisma`}</MDXTag>{`\n\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`generate:`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`  - generator:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`javascript-client`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`    output:`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`./generated/prisma-client/`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Deploy datamodel.prisma to Prisma Server in AWS EC2`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` PRISMA_MANAGEMENT_API_SECRET=__SECRET_KEY__ prisma deploy`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Generate prisma client for GraphQL API`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` prisma generate`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`References`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://docs.docker.com/machine/drivers/aws/\"}}>{`https://docs.docker.com/machine/drivers/aws/`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://docs.docker.com/machine/examples/aws/#step-2-use-machine-to-create-the-instance\"}}>{`https://docs.docker.com/machine/examples/aws/#step-2-use-machine-to-create-the-instance`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`(Option 2) Using AWS ECS Cli`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Create EC2 and ECS cluster`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` ecs-cli up --keypair __AWS_KEYPAIR_NAME__ --capability-iam --vpc __SPECIFIC_VPC__ --subnets __SUBNET_1__,__SUBNET_2__ --size 1 --instance-type t2.micro --cluster-config prisma-server-ecs`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It will generate the cloudformation which will proceed the whole process to generate EC2 instance and ECS cluster.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Compose the Prisma Server to ECS container`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` ecs-cli compose up --create-log-groups --cluster-config prisma-server-ecs`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It will generate the new Task definition. You can check the new Task definition is runnig.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Check if the new Task definition is running`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` esc-cli ps`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If your new Task definition is working well, you might want to make new service in ECS cluster in order to manage the task.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`References`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://docs.aws.amazon.com/ko_kr/AmazonECR/latest/userguide/ECR_AWSCLI.html\"}}>{`https://docs.aws.amazon.com/ko_kr/AmazonECR/latest/userguide/ECR_AWSCLI.html`}</MDXTag>{` > `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://docs.aws.amazon.com/ko_kr/AmazonECS/latest/developerguide/ECS_CLI_tutorial_EC2.html\"}}>{`https://docs.aws.amazon.com/ko_kr/AmazonECS/latest/developerguide/ECS_CLI_tutorial_EC2.html`}</MDXTag></MDXTag>\n</MDXTag>\n\n\n\n\n\n\n\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAHA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AA9JA;AACA;AADA;AAgKA;;;;A","sourceRoot":""}