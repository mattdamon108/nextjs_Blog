{"version":3,"file":"static/webpack/static/development/pages/post.js.e4b3b2a6f0764bec4b04.hot-update.js","sources":["webpack:///./posts/2018-12-10-Netplan-how-to-connect-wpa2-linux.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \nexport const title = \"How to connect to wireless WPA2 with Netplan\"\nexport const createdAt = \"2018-12-10T00:00:00.000Z\"\nexport const filename = \"2018-12-10-Netplan-how-to-connect-wpa2-linux\"\nexport const category = [\"devlogs\"]\nexport const tag = [\"netplan\",\"linux\",\"wireless\"]\nexport const thumb = \"2018-12-10_thumb.png\"\n\nconst layoutProps = {\n  title,\ncreatedAt,\nfilename,\ncategory,\ntag,\nthumb\n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components}>{`[Linux]`}{` How to connect to wireless WPA2 with Netplan`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`by moondaddi on 2018-12-10`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Netplan?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Netplan is the utility for easily configuring networking on a linux system. Ubuntu 17.10 starts including the netplan by default instead of deprecated ifupdown.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`How to connect`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Configure `}{`*`}{`.yaml`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Make new file with any name `}{`*`}{`.yaml in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/netplan`}</MDXTag>{`\nYou can make as many configuration files as you want. In that case, `}{`*`}{`.yaml files will be applied by alphbetically.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}>{`network:\n  version: 2\n    renderer: networkd\n    ethernets:  # this is for lan\n      enp2s0:\n        addresses: []\n        dhcp4: true\n    wifis:  # this is for wlan\n      wlp3s0:  # wlan interface\n        access-points: \"SSID\":  # your SSID\n          password: \"PASWORD\"  # your PASSWORD\n        dhcp4: no\n        dhcp6: true\n        addresses: [192.168.0.200/24]  # set the static IP\n        gateway4: 192.168.0.1  # gateway\n        nameservers:\n          addresses: [192.168.0.1,8.8.8.8,8.8.4.4]`}</MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`How to check wlan interface`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` iwconfig`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Generate conf`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The configuration files `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/netplan/*.yaml`}</MDXTag>{` needs to be generated before applying to system. The `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`.conf files will be generated in \\`/run/netplan/`}</MDXTag>{`.conf\\` which shadow completely YAML files.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` sudo netplan --debug generate`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Apply the generated conf`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-shell\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-meta\"}}>{`$`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"bash\"}}>{` sudo netplan apply`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components}>{`References`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Netplan reference page (`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://netplan.io/reference\"}}>{`https://netplan.io/reference`}</MDXTag>{`)`}</MDXTag>\n\n\n\n\n\n\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAHA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAivDA;AACA;AADA;AAyDA;;;;A","sourceRoot":""}